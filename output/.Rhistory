M = as.matrix(
read.csv("https://raw.githubusercontent.com/PABalland/ON/master/amz.csv" ,
sep = ",",
header = T,
row.names = 1))
M
dim(M)
# Es la estructura de red que AMAZON ocupa para hacer recomendaciones en base a tus compras actuales
M[1:6,1]
# Ver sólo el vector de clientes que compran el producto "corbata" (producto de la columna 1)
M[1:6,1:2]
#Ver sólo un fragmento de la base original, en relación a los dos productos que me interesan
#Puede ser útil para explorar clientes y productos
rowSums(M)
# Computar grado de centralidad
rowSums(M)
# función útil para enfocarnos en productos y no sólo en clientes
t(m)
# función útil para enfocarnos en productos y no sólo en clientes
t(M)
# Suma de matrices
M + M
# Crear nuevo un objeto llamado x
X = M + M
M^2
M * M
M
dim(M)
t(M)
dim(t(m))
dim(t(M))
#multiplicación de matrices checar tamaños
#checar tamaño de la matriz -dim-
M %% t(M)
#multiplicación de matrices checar tamaños
#checar tamaño de la matriz -dim-
M%%t(M)
M
dim(M)
t(M)
dim(t(M))
#multiplicación de matrices checar tamaños
#checar tamaño de la matriz -dim-
M %*% t(M)
t(M) %*% M
M
#similaridad de productos (de gustos) matriz de co ocurrencia de productos
P = t(M) %*% M
P#no es una matriz identidad (como en la correlación)
#no es una matriz identidad (como en la correlación)
diag(P) = 0
P
#similaridad de clientes - matriz de co ocurrencia de clienes
C = M %*% t(M)
c
#similaridad de clientes - matriz de co ocurrencia de clienes
C = M %*% t(M)
#similaridad de clientes - matriz de co ocurrencia de clienes
C = M %*% t(M)
C
M
#no es una matriz identidad (como en la correlación)
diag(C) = C
diag(C) = 0
C = M %*% t(M)
C
diag(C) = 0
c
C
# Es la estructura de red que AMAZON ocupa para hacer recomendaciones en base a tus compras actuales
M[1:6,1]
# Ver sólo el vector de clientes que compran el producto "corbata" (producto de la columna 1)
M[1:6,1:2]
# Computar grado de centralidad
rowSums(M)
# función útil para enfocarnos en productos y no sólo en clientes
t(M)
# Suma de matrices
M + M
# Crear nuevo un objeto llamado x
X = M + M
M * M
#multiplicación de matrices checar tamaños
#checar tamaño de la matriz -dim-
M %*% t(M)
t(M) %*% M
#similaridad de productos (de gustos) matriz de co ocurrencia de productos
P = t(M) %*% M
#no es una matriz identidad (como en la correlación)
diag(P) = 0
#similaridad de clientes - matriz de co ocurrencia de clienes
C = M %*% t(M)
C
#no es una matriz identidad (como en la correlación)
diag(C) = C
diag(C) = 0
c
C
#instalar paquete tidyverse  y readr
install.packages("tidyverse")
install.packages("readr")
library(readr)
ICE_2014 <- read_csv("C:/Users/Usuario/OneDrive/Escritorio/DOCTORADO/DRA. CARLA-COMPLEJIDAD ECONÓMICA/LABS/ICE 2014.csv")
View(ICE_2014)
View(ICE_2014)
View(ICE_2014)
View(ICE_2014)
View(ICE_2014)
View(ICE_2014)
names(tabla1)
View(ICE_2014)
View(ICE_2014)
library(readr)
View(ICE_2014)
names(ICE_2014)
# 1. Pivotar tabla  "A LO LARGO"
t1_PIVOTANTE = ICE_2014 %>%
pivot_longer(cols = c( [1] "MUNICIPIO" "KM0"       "KM2"       "KM4"       "KM6"       "KM8"
# 1. Pivotar tabla  "A LO LARGO"
t1_PIVOTANTE = ICE_2014 %>%
pivot_longer(cols = c(  "KM0" , "KM2" , "KM4" , "KM6" , "KM8" , "KM10" , "KM12" , "KM14" , "KM16" , "KM18" , "KM20" , "KM22" , "KM24" , "KM26" ), names_to = "iteracion", values_to = "ranking")
# 1. Pivotar tabla  "A LO LARGO"
t1_PIVOTANTE = ICE_2014 %>%
pivot_longer(cols = c(  "KM0" , "KM2" , "KM4" , "KM6" , "KM8" , "KM10" , "KM12" , "KM14" , "KM16" , "KM18" , "KM20" , "KM22" , "KM24" , "KM26" ), names_to = "iteracion", values_to = "ranking")
names(ICE_2014)
# 1. Pivotar tabla  "A LO LARGO"
t1_PIVOTANTE = ICE_2014 %>%
pivot_longer(cols = c(  [1] "MUNICIPIO" "KM0"       "KM2"       "KM4"       "KM6"       "KM8"
#instalar paquete tidyverse  y readr
install.packages("tidyverse")
install.packages("readr")
View(dataset)
View(ICE_2014)
View(ICE_2014)
View(ICE_2014)
View(ICE_2014)
library(readr)
tabla1 <- read_csv("C:/Users/Usuario/OneDrive/Escritorio/DOCTORADO/DRA. CARLA-COMPLEJIDAD ECONÓMICA/LABS/tabla1.csv")
View(tabla1)
names(tabla1)
# 1. Pivotar tabla  "A LO LARGO"
t1_PIVOTANTE = tabla1 %>%
pivot_longer(cols = c("Km,0"   ,   "Km,2"   ,   "Km,4"   ,   "Km,6"   ,   "Km,8"    ,  "Km,10"  ,   "Km,12"  ,   "Km,14"  ,   "Km,16"  ,   "Km,18"   ,  "Km,20"  ,   "Km,22" , "Km,24"  ,   "Km,26" ), names_to = "iteracion", values_to = "ranking")
# 1. Pivotar tabla  "A LO LARGO"
t1_PIVOTANTE = tabla1 %>%
pivot_longer(cols = c("Km0"   ,   "Km2"   ,   "Km4"   ,   "Km6"   ,   "Km8"    ,  "Km10"  ,   "Km12"  ,   "Km14"  ,   "Km16"  ,   "Km18"   ,  "Km20"  ,   "Km22" , "Km24"  ,   "Km26" ), names_to = "iteracion", values_to = "ranking")
# 1. Pivotar tabla  "A LO LARGO"
t1_PIVOTANTE = tabla1 %>%
pivot_longer(cols = c("KM0"       "KM2"       "KM4"       "KM6"       "KM8"
library(readr)
tabla1 <- read_csv("C:/Users/Usuario/OneDrive/Escritorio/DOCTORADO/DRA. CARLA-COMPLEJIDAD ECONÓMICA/LABS/tabla1.csv")
View(tabla1)
names(tabla1)
# 1. Pivotar tabla  "A LO LARGO"
t1_PIVOTANTE = tabla1 %>%
pivot_longer(cols = c("KM0"       "KM2"       "KM4"       "KM6"       "KM8"
# 1. Pivotar tabla  "A LO LARGO"
t1_PIVOTANTE = tabla1 %>%
pivot_longer(cols = c("KM,0"      "KM,2"      "KM,4"      "KM,6"      "KM,8"
setwd("~/")
setwd("~/")
library(readr)
tabla1 <- read_csv("C:/Users/Usuario/OneDrive/Escritorio/DOCTORADO/DRA. CARLA-COMPLEJIDAD ECONÓMICA/LABS/tabla1.csv")
View(tabla1)
names(tabla1)
names(tabla1)
# 1. Pivotar tabla  "A LO LARGO"
t1_PIVOTANTE = tabla1 %>%
pivot_longer(cols = c( "KM,0" , "KM,2" , "KM,4" , "KM,6" , "KM,8" , "KM,10" , "KM,12" , "KM,14" , "KM,16" , "KM,18" , "KM,20" , "KM,22" , "KM,24" , "KM,26"  ), names_to = "iteracion", values_to = "ranking")
pivot_longer(cols = c( "KM,0" , "KM,2" , "KM,4" , "KM,6" , "KM,8" , "KM,10" , "KM,12" , "KM,14" , "KM,16" , "KM,18" , "KM,20" , "KM,22" , "KM,24" , "KM,26"  ), names_to = "iteracion", values_to = "ranking")
# 1. Pivotar tabla  "A LO LARGO"
t1_PIVOTANTE = tabla1 %>%
pivot_longer(cols = c("KM,0" , "KM,2" , "KM,4" , "KM,6" , "KM,8" , "KM,10" , "KM,12" , "KM,14" , "KM,16" , "KM,18" , "KM,20" , "KM,22" , "KM,24" , "KM,26"), names_to = "iteracion", values_to = "ranking")
View(tabla1)
names(tabla1)
# 1. Pivotar tabla  "A LO LARGO"
t1_PIVOTANTE = tabla1 %>%
pivot_longer(cols = c("KM,0" , "KM,2" , "KM,4" , "KM,6" , "KM,8" , "KM,10" , "KM,12" , "KM,14" , "KM,16" , "KM,18" , "KM,20" , "KM,22" , "KM,24" , "KM,26"), names_to = "iteracion", values_to = "ranking")
View(ICE_2014)
View(ICE 2014)
View(ICE_2014)
View(ICE_2014)
#Cargar paquete tidyverse y readr
library(tidyverse)
library(readr)
View(ICE_2014)
tabla1 <- read_csv("C:/Users/Usuario/OneDrive/Escritorio/DOCTORADO/DRA. CARLA-COMPLEJIDAD ECONÓMICA/LABS/ICE_2014.csv")
View(ICE_2014)
View(tabla1)
names(tabla1)
# 1. Pivotar tabla  "A LO LARGO"
t1_PIVOTANTE = tabla1 %>%
pivot_longer(cols = c("Km,0"   ,   "Km,2"   ,   "Km,4"   ,   "Km,6"   ,   "Km,8"    ,  "Km,10"  ,   "Km,12"  ,   "Km,14"  ,   "Km,16"  ,   "Km,18"   ,  "Km,20"  ,   "Km,22" , "Km,24"  ,   "Km,26" ), names_to = "iteracion", values_to = "ranking")
# 1. Pivotar tabla  "A LO LARGO"
t1_PIVOTANTE = tabla1 %>%
pivot_longer(cols = c("KM,0"   ,   "KM,2"   ,   "KM,4"   ,   "KM,6"   ,   "KM,8"    ,  "KM,10"  ,   "KM,12"  ,   "KM,14"  ,   "KM,16"  ,   "KM,18"   ,  "KM,20"  ,   "KM,22" , "KM,24"  ,   "KM,26" ), names_to = "iteracion", values_to = "ranking")
# 1. Pivotar tabla  "A LO LARGO"
t1_PIVOTANTE = tabla1 %>%
pivot_longer(cols = c("KM,0"   ,   "KM,2"   ,   "KM,4"   ,   "KM,6"   ,   "KM,8"    ,  "KM,10"  ,   "KM,12"  ,   "KM,14"  ,   "KM,16"  ,   "KM,18"   ,  "KM,20"  ,   "KM,22" , "KM,24"  ,   "KM,26" ), names_to = "iteracion", values_to = "ranking")
# Exportar resultado: tabla ordenada
write.csv(t1_PIVOTANTE, file = "ice_CHARTICULATOR.csv")
View(t1_PIVOTANTE)
View(t1_PIVOTANTE)
setwd("C:/Users/karit/Desktop")
setwd("C:/Users/karit/Desktop")
# Exportar resultado: tabla ordenada
write.csv(t1_PIVOTANTE, file = "ice_CHARTICULATOR.csv")
getwd()
library (EconGeo)
library (EconGeo)
